// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Jest           = require("bs-jest/src/jest.js");
var List           = require("bs-platform/lib/js/list.js");
var Block          = require("bs-platform/lib/js/block.js");
var Lexing         = require("bs-platform/lib/js/lexing.js");
var Lexer$Languid  = require("../src/lexer.bs.js");
var Parser$Languid = require("../src/parser.bs.js");

describe("Parser", (function () {
        describe("basic script", (function () {
                var lexbuf = Lexing.from_string("walk shoot");
                var commands = Parser$Languid.prog(Lexer$Languid.read, lexbuf);
                Jest.test("returns the expected number of commands", (function () {
                        return Jest.Expect[/* toBe */2](2, Jest.Expect[/* expect */0](List.length(commands)));
                      }));
                Jest.test("returns the first command first", (function () {
                        return Jest.Expect[/* toEqual */12](/* Now */Block.__(0, [/* Walk */0]), Jest.Expect[/* expect */0](List.nth(commands, 0)));
                      }));
                return Jest.test("returns the last command last", (function () {
                              return Jest.Expect[/* toEqual */12](/* Turn */Block.__(1, [/* Shoot */1]), Jest.Expect[/* expect */0](List.nth(commands, 1)));
                            }));
              }));
        return /* () */0;
      }));

/*  Not a pure module */
