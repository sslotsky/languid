// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block           = require("bs-platform/lib/js/block.js");
var Curry           = require("bs-platform/lib/js/curry.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var $$Error = Caml_exceptions.create("Parser-Languid.Basics.Error");

var Basics = /* module */[/* Error */$$Error];

function _menhir_goto_prog(_, _$1, _v) {
  return _v;
}

function prog(lexer, lexbuf) {
  var _menhir_env = /* record */[
    /* _menhir_lexer */lexer,
    /* _menhir_lexbuf */lexbuf,
    /* _menhir_token : () */0,
    /* _menhir_error : false */0
  ];
  var _menhir_stack_001 = _menhir_env[/* _menhir_lexbuf */1][/* lex_curr_p */11];
  var _menhir_stack = /* tuple */[
    /* () */0,
    _menhir_stack_001
  ];
  var lexer$1 = _menhir_env[/* _menhir_lexer */0];
  var lexbuf$1 = _menhir_env[/* _menhir_lexbuf */1];
  var _tok = Curry._1(lexer$1, lexbuf$1);
  var _menhir_env$1 = /* record */[
    /* _menhir_lexer */lexer$1,
    /* _menhir_lexbuf */lexbuf$1,
    /* _menhir_token */_tok,
    /* _menhir_error : false */0
  ];
  var _tok$1 = _menhir_env$1[/* _menhir_token */2];
  switch (_tok$1) {
    case 0 : 
        return _menhir_goto_prog(_menhir_env$1, _menhir_stack, /* Now */Block.__(0, [/* Walk */0]));
    case 1 : 
        return _menhir_goto_prog(_menhir_env$1, _menhir_stack, /* Turn */Block.__(1, [/* Shoot */1]));
    case 2 : 
        return _menhir_goto_prog(_menhir_env$1, _menhir_stack, /* Turn */Block.__(1, [/* Move */0]));
    case 3 : 
        return _menhir_goto_prog(_menhir_env$1, _menhir_stack, /* Now */Block.__(0, [/* Listen */1]));
    
  }
}

var _eRR = $$Error;

exports.Basics            = Basics;
exports.$$Error           = $$Error;
exports._eRR              = _eRR;
exports._menhir_goto_prog = _menhir_goto_prog;
exports.prog              = prog;
/* No side effect */
